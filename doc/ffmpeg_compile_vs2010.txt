MSYS with mingw-get-setup.exe installer from http://www.mingw.org
-----------------------------------------------------------------
* mingw-developer-toolkit
* mingw32-base
* mingw32-gcc-g++
* msys-base
* mingw doesn't provide pkg-config.exe so copy a static version to C:\MinGW\bin

Copy yasm.exe, c99wrap.exe and c99conv.exe to
C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\BIN
* download generic yasm-1.2.0-win32.exe from http://yasm.tortall.net
* download c99wrap.exe and c99conv.exe from https://github.com/libav/c99-to-c89

Get latest inttypes.h from http://code.google.com/p/msinttypes
Only copy inttypes.h to ffmpeg\msvc because Visual Studio 2010 has already
stdint.h under C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include
 
Copy C:\MinGW\msys\1.0\etc\fstab.sample to C:\MinGW\msys\1.0\etc\fstab, 
comment perl line if not installed (before you save fstab, ensure that 
there is at least one blank line at the bottom, below all of the entries 
that may exist, then save and close the file) 
or run the command: /postinstall/pi.sh

double-click config_msvc_prompt.bat in ffmpeg directory
(--extra-cflags and --extra-ldflags are passed to msvc compiler and 
linker but seem not to work well with c99 conversion tool, so better to 
adapt the INCLUDE and LIB variables if you want msvc to find external 
libs, that's exactly done in config_msvc_prompt.bat) 


In MSYS Check
-------------
$ which cl
/C/Program Files (x86)/Microsoft Visual Studio 10.0/VC/BIN/cl.exe

$ which link
/C/Program Files (x86)/Microsoft Visual Studio 10.0/VC/BIN/link.exe
(if it points to the msys link then rename C:\MinGW\msys\1.0\bin\link.exe to msys_link.exe)

$ which dumpbin
/C/Program Files (x86)/Microsoft Visual Studio 10.0/VC/BIN/dumpbin.exe

$ which c99wrap
/C/Program Files (x86)/Microsoft Visual Studio 10.0/VC/BIN/c99conv.exe

$ which c99conv
/C/Program Files (x86)/Microsoft Visual Studio 10.0/VC/BIN/c99wrap.exe

$ which yasm
/C/Program Files (x86)/Microsoft Visual Studio 10.0/VC/BIN/yasm.exe


External libx264 (not tested yet)
---------------------------------
http://siliconandlithium.blogspot.ch/2014/03/building-x264-on-windows-with-visual.html


External libmp3lame
-------------------
- Open vc_solution\vc9_lame.sln and let it convert all projects
- Remember to change compilation code generation to /MT
- Compile lame without defining HAVE_MPGLIB because we do not want mp3 
  decoder support (there is already a decoder in ffmpeg) and ./configure 
  would fail because of missing dependencies from the decoder library 
- Use Release or ReleaseSSE2 static targets (nasm target builds but is not linking)
  and copy lame/lame.h (create also the lame directory) and mp3lame.lib 
  (rename it exactly to this) to ffmpeg\msvc


In MSYS configure and make (--optflags=-O2 not making a difference...)
----------------------------------------------------------------------
$ cd /c/uimager/ffmpeg
$ make distclean
$ ./config_msvc
$ make

  
Debug build (not tested yet)
----------------------------
--enable-debug
--extra-cflags="-Z7 -MTd" --extra-ldflags="-DEBUG"


Linking to FFmpeg
-----------------
- Runtime Library set to Multi-threaded (/MT) in your project's settings
- Set ffmpeg\msvc as additional include directory because inttypes.h is needed
- If you do not make debug builds of ffmpeg then in Debug Target of your project
  add libcmt.lib to Linker - Input - Ignore Specific Default Libraries  
- Including both stdint.h and intsafe.h generates warnings in vs2010 (fixed in vs2012)
  http://connect.microsoft.com/VisualStudio/feedback/details/621653/including-stdint-after-intsafe-generates-warnings
  In stdafx.h add:
  #if _MSC_VER == 1600
  #pragma warning(push)
  #pragma warning(disable : 4005)
  #include <intsafe.h>
  #include <stdint.h>
  #pragma warning(pop)
  #endif
  
  
ATTENTION: when updating the ffmpeg source make sure the offset to init 
m_nUnderlyingTransport with the lower_transport from RTSPState in rtsp.h 
is still correct!!
