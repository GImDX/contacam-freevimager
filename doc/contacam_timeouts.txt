MainFrm.h
---------

// Autorun of devices checks for AUTORUN_VIDEODEVICES_MAX_RETRIES * AUTORUN_VIDEODEVICES_RETRY_DELAY ms:
// - whether the directshow device is available
// - whether there is a network interface that can connect to the given camera host
#define AUTORUN_VIDEODEVICES_MAX_RETRIES			3
#define AUTORUN_VIDEODEVICES_RETRY_DELAY			5000	// ms


NetCom.h
--------

// Timeout for waiting the FD_CLOSE replay if we started closing
#define NETCOM_CONNECTION_SHUTDOWN_TIMEOUT			3000U

// Timeout for letting the RX Thread finishing reading the data in the input queue
// (this is useful for http files download for example, in this case the peer
// closes the connection very fast)
#define NETCOM_PEER_CONNECTION_CLOSE_TIMEOUT		2000U

// Threads closing timeout, after this time the threads are forced to terminate
#define NETCOM_BLOCKING_TIMEOUT						15000U


VideoDeviceDoc.h
----------------

#define PROCESS_MAX_FRAMETIME						15000U	// ms, make sure that: 1000 / MIN_FRAMERATE < PROCESS_MAX_FRAMETIME
#define STARTUP_SETTLE_TIME_SEC						3		// movdet and rec startup delay in sec (especially to sync. audio / video)
#define PROCESSFRAME_MAX_RETRY_TIME					3500	// maximum retry time in ms for Process Frame Stop Engine
#define WATCHDOG_THRESHOLD							30000U	// ms, make sure that: 1000 / MIN_FRAMERATE < WATCHDOG_THRESHOLD
#define HTTPGETFRAME_RECONNECTION_DELAY				5000U	// in case of a unhandled HTTP return code wait that time in ms before reconnecting
#define HTTPGETFRAME_CONNECTION_TIMEOUT				60		// Connection timeout in sec, used:
															// - remove the oldest connections in network poll mode
															// - network setup try connecting timeout
															// - network reconnect in watchdog
